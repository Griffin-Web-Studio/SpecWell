function bughere($val) {
    console.log($val);
}

function setCookie(cname, cvalue, exdays) {
    const d = new Date();
    d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1e3);
    let expires = "expires=" + d.toUTCString();
    document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
}

function getCookie(cname) {
    let name = cname + "=";
    let child_frame_responsezCookie = decodeURIComponent(document.cookie);
    let ca = child_frame_responsezCookie.split(";");
    for (let i = 0; i < ca.length; i++) {
        let c = ca[i];
        while (c.charAt(0) == " ") {
            c = c.substring(1);
        }
        if (c.indexOf(name) == 0) {
            return c.substring(name.length, c.length);
        }
    }
    return "";
}

function setURLSearchParam(key, value) {
    const url = new URL(window.location.href);
    url.searchParams.set(key, value);
    window.history.pushState({
        path: url.href
    }, "", url.href);
}

document.addEventListener("DOMContentLoaded", gws_frontend_validator_widget, false);

function gws_frontend_validator_widget() {
    let gws_spec_widget = '<div class="gws-spec-container">' + '<a href="#" class="gws-spec-toggle">Toggle Spec</a>' + '<form method="get" class="gws-spec-form">' + '<div class="gws-flex">' + '<label for="production-site" class="gws-spec-label">Production Site URL</label>' + '<input type="url" name="production-site" id="production-site" class="gws-spec-input production-site-url" placeholder="https://path.to-website.com">' + '<a class="gws-button gws-load-website">Load Website Frame</a>' + '<a class="gws-button gws-unload-website">Unload Website Frame</a>' + "</div>" + '<div class="gws-flex">' + '<label for="spec-img" class="gws-spec-label">Spec Image URL</label>' + '<input type="url" name="spec-img" id="spec-img" class="gws-spec-input gws-spec-img-url" placeholder="https://path.to.spec/image.url">' + '<a class="gws-button load-spec-image">Load Spec Image</a>' + '<a class="gws-button unload-spec-image">Unload Spec Image</a>' + "</div>" + '<div class="gws-flex">' + '<label for="spec-opacity" class="gws-spec-label">Opacity</label>' + '<input type="range" id="spec_opacity" class="spec-opacity" name="spec-opacity" value="0.3" min="0" max="1" step="0.1">' + '<label for="spec-x-adjust" class="gws-spec-label">X Axis Adjust</label>' + '<input type="number" id="spec-x-adjust" class="gws-spec-input spec-x-adjust" name="spec-x-adjust" value="0">' + '<label for="spec-y-adjust" class="gws-spec-label">Y Axis Adjust</label>' + '<input type="number" id="spec-y-adjust" class="gws-spec-input spec-y-adjust" name="spec-y-adjust" value="0">' + "</div>" + '<div class="gws-flex">' + '<select name="site-width-preset" id="site-width-preset" class="site-width-preset">' + "<option selected disabled>Select Media Preset</option>" + '<option value="320">s-mobile  320)</option>' + '<option value="375">m-mobile  375)</option>' + '<option value="425">l-mobile  425)</option>' + '<option value="540">s-tablet  540)</option>' + '<option value="655">m-tablet  655)</option>' + '<option value="768">l-tablet  768)</option>' + '<option value="854">s-laptop  854)</option>' + '<option value="940">m-laptop  940)</option>' + '<option value="1024">l-laptop  1024)</option>' + '<option value="1440">s-desktop 1440)</option>' + '<option value="1920">m-desktop 1920)</option>' + '<option value="2560">l-desktop 2560)</option>' + "</select>" + '<label for="spec-media-width" class="gws-spec-label">Media Width</label>' + '<input type="number" id="spec-media-width" class="gws-spec-input spec-media-width" name="spec-media-width" value="800">' + '<label for="spec-media-zoom" class="gws-spec-label">Media Zoom</label>' + '<input type="number" id="spec-media-zoom" class="gws-spec-input spec-media-zoom" name="spec-media-zoom" value="100">' + "</div>" + '<div class="gws-flex">' + "<div>" + '<a href="#" class="gws-button gws-spec-hide-code-snippet">Hide Code Snippet</a>' + '<p style="color: red; font-weight: bold;">For this spec checker to automatically correct frame height, you need to add this script anywhere before the end of the body. Do it on the page you about to spec check</p>' + '<pre class="gws-spec-code-child">' + "&lt;script&gt;&#10;" + "    window.addEventListener('message', event => {&#10;" + "        if (event.origin.startsWith('http://192.168') || event.origin.startsWith('https://gws-internal.griffin-studio.co.uk/')) {&#10;" + "            if (event.data === 'can I get your height?') {&#10;" + "&#10;" + "                const spec_response_data = JSON.stringify({&#10;" + "                    my_height: document.body.offsetHeight,&#10;" + "                });&#10;" + "                window.parent.postMessage(spec_response_data, '*');&#10;" + "            }&#10;" + "        }&#10;" + "&#10;" + "    });&#10;" + "&lt;/script&gt;&#10;" + "</pre>" + "</div>" + "</div>" + "</form>" + "</div>", gws_spec_image = '<div class="gws-spec-image"><img src="" alt="Spec Image Overlay" class="image"/></div>';
    document.body.insertAdjacentHTML("beforeend", gws_spec_widget);
    var gws_spec_container = document.body.querySelector(".gws-spec-container"), gws_spec_toggle = gws_spec_container.querySelector(".gws-spec-toggle"), gws_spec_form = gws_spec_container.querySelector(".gws-spec-form"), gws_spec_img_url = gws_spec_form.querySelector(".gws-spec-img-url"), gws_spec_load_image = gws_spec_form.querySelector(".load-spec-image"), gws_spec_unload_image = gws_spec_form.querySelector(".unload-spec-image"), gws_spec_prod_site_url = gws_spec_form.querySelector(".production-site-url"), gws_spec_load_site = gws_spec_form.querySelector(".gws-load-website"), gws_spec_unload_site = gws_spec_form.querySelector(".gws-unload-website"), gws_spec_img_o_adjust = gws_spec_form.querySelector(".spec-opacity"), gws_spec_img_x_adjust = gws_spec_form.querySelector(".spec-x-adjust"), gws_spec_img_y_adjust = gws_spec_form.querySelector(".spec-y-adjust"), spec_media_width = gws_spec_form.querySelector(".spec-media-width"), spec_media_zoom = gws_spec_form.querySelector(".spec-media-zoom"), site_width_preset = gws_spec_form.querySelector(".site-width-preset"), gws_spec_code_child = gws_spec_form.querySelector(".gws-spec-code-child"), gws_spec_hide_code = gws_spec_form.querySelector(".gws-spec-hide-code-snippet"), gws_spec_image_wrap = document.body.querySelector(".gws-spec-image"), vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0), vh = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);
    spec_media_width.value = vw;
    site_width_preset.onchange = function(e) {
        e.preventDefault();
        console.log(this.dataset.widthPreset);
        spec_media_width.value = this.value;
        on_spec_option_change();
    };
    gws_spec_toggle.onclick = function(e) {
        e.preventDefault();
        gws_spec_container.classList.toggle("hide");
    };
    gws_spec_load_site.onclick = function(e) {
        e.preventDefault();
        frame_site.src = gws_spec_prod_site_url.value;
        on_spec_option_change();
    };
    gws_spec_unload_site.onclick = function(e) {
        e.preventDefault();
        frame_site.src = "";
    };
    gws_spec_unload_image.onclick = function(e) {
        e.preventDefault();
        var x = document.body.querySelector(".gws-spec-image").remove();
    };
    gws_spec_hide_code.onclick = function(e) {
        e.preventDefault();
        gws_spec_code_child.classList.toggle("hide");
    };
    gws_spec_img_o_adjust.onchange = function(e) {
        on_spec_option_change();
    };
    gws_spec_img_x_adjust.onchange = function(e) {
        on_spec_option_change();
    };
    gws_spec_img_y_adjust.onchange = function(e) {
        on_spec_option_change();
    };
    spec_media_width.onchange = function(e) {
        on_spec_option_change();
    };
    spec_media_zoom.onchange = function(e) {
        on_spec_option_change();
    };
    window.onresize = function(e) {
        var vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0), vh = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);
        spec_media_width.value = vw;
    };
    function on_spec_option_change() {
        var gws_spec_image_overlay = document.body.querySelector(".gws-spec-image .image"), gws_spec_frame = document.body.querySelector(".website-frame");
        if (typeof gws_spec_image_overlay != "undefined" && gws_spec_image_overlay !== null && gws_spec_frame.src !== null) {
            document.body.querySelector(".gws-spec-image").style["opacity"] = document.body.querySelector(".spec-opacity").value;
            document.body.querySelector(".gws-spec-image").style["transform"] = "translate(" + gws_spec_img_x_adjust.value + "px, " + gws_spec_img_y_adjust.value + "px)";
            document.body.querySelector(".website-frame-container").style["width"] = spec_media_width.value + "px";
            document.body.querySelector(".website-frame-container").style["transform"] = "scale(" + spec_media_zoom.value / 100 + ")";
            document.body.querySelector(".gws-spec-image .image").style["width"] = spec_media_width.value + "px";
            document.body.querySelector(".gws-spec-image .image").style["transform"] = "scale(" + spec_media_zoom.value / 100 + ")";
            console.log("transform:" + "translate(" + gws_spec_img_x_adjust.value + "px, " + gws_spec_img_y_adjust.value + "px)");
        }
    }
    if (getCookie("gws_fun_value") === 0 || getCookie("gws_fun_value") === "") {
        setCookie("gws_fun_value", 0, 1);
    }
    gws_spec_load_image.onclick = function(e) {
        e.preventDefault();
        if (gws_spec_img_url.value === "" && getCookie("gws_fun_value") === "0") {
            alert('Erm, need speck URL? Ok how about we add something to the input field, lets say something like "farts"');
            gws_spec_img_url.value = "https://farts.com";
        } else if (gws_spec_img_url.value === "https://farts.com" && getCookie("gws_fun_value") === "0") {
            alert("Ok, very mature. How about you enter something a little more creative, like a link to spec?");
            gws_spec_img_url.value = "";
            setCookie("gws_fun_value", 1, 1);
        } else if (gws_spec_img_url.value === "" && getCookie("gws_fun_value") === "1") {
            alert("Please Enter, Spec URL");
        } else if (gws_spec_img_url.value !== "") {
            var gws_spec_image_overlay = document.body.querySelector(".gws-spec-image .image");
            if (typeof gws_spec_image_overlay != "undefined" && gws_spec_image_overlay !== null) {
                gws_spec_image_overlay.src = gws_spec_img_url.value;
                document.body.querySelector(".gws-spec-image").style["opacity"] = document.body.querySelector(".spec-opacity").value;
            } else {
                document.body.insertAdjacentHTML("beforeend", gws_spec_image);
                var gws_spec_image_overlay = document.body.querySelector(".gws-spec-image .image");
                gws_spec_image_overlay.src = gws_spec_img_url.value;
                document.body.querySelector(".gws-spec-image").style["opacity"] = document.body.querySelector(".spec-opacity").value;
            }
        } else {
            alert("What the hec happened? This is wrong!");
        }
        on_spec_option_change();
    };
}